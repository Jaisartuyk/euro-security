from django.core.management.base import BaseCommand
from django.conf import settings
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.lib import colors
from reportlab.lib.enums import TA_CENTER, TA_LEFT, TA_RIGHT
import os


class Command(BaseCommand):
    help = 'Generar PDF del Formulario de Entrevista Laboral'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üìÑ Generando PDF del Formulario de Entrevista Laboral...'))
        
        # Crear directorio si no existe
        forms_dir = os.path.join(settings.MEDIA_ROOT, 'forms', 'documents')
        os.makedirs(forms_dir, exist_ok=True)
        
        # Ruta del archivo PDF
        pdf_path = os.path.join(forms_dir, 'formulario_entrevista_laboral_OP-EUEC-01.pdf')
        
        # Crear el documento PDF
        doc = SimpleDocTemplate(
            pdf_path,
            pagesize=letter,
            rightMargin=72,
            leftMargin=72,
            topMargin=72,
            bottomMargin=18
        )
        
        # Estilos
        styles = getSampleStyleSheet()
        
        # Estilo personalizado para el t√≠tulo
        title_style = ParagraphStyle(
            'CustomTitle',
            parent=styles['Heading1'],
            fontSize=16,
            spaceAfter=30,
            alignment=TA_CENTER,
            textColor=colors.darkblue
        )
        
        # Estilo para subt√≠tulos
        subtitle_style = ParagraphStyle(
            'CustomSubtitle',
            parent=styles['Heading2'],
            fontSize=12,
            spaceAfter=12,
            textColor=colors.darkblue,
            backColor=colors.lightgrey,
            borderPadding=5
        )
        
        # Estilo para texto normal
        normal_style = styles['Normal']
        normal_style.fontSize = 10
        normal_style.spaceAfter = 6
        
        # Contenido del PDF
        story = []
        
        # Encabezado con informaci√≥n del formulario
        header_data = [
            ['FORMULARIO DE ENTREVISTA LABORAL', '', '', ''],
            ['Codificaci√≥n', 'Versi√≥n', 'Emisi√≥n', 'Revisi√≥n'],
            ['OP-EUEC-01', '1', '09-09-2025', 'XXXXXX']
        ]
        
        header_table = Table(header_data, colWidths=[2.5*inch, 1.5*inch, 1.5*inch, 1.5*inch])
        header_table.setStyle(TableStyle([
            ('SPAN', (0, 0), (3, 0)),
            ('ALIGN', (0, 0), (3, 0), 'CENTER'),
            ('FONTNAME', (0, 0), (3, 0), 'Helvetica-Bold'),
            ('FONTSIZE', (0, 0), (3, 0), 14),
            ('TEXTCOLOR', (0, 0), (3, 0), colors.darkblue),
            ('BACKGROUND', (0, 1), (3, 1), colors.lightgrey),
            ('FONTNAME', (0, 1), (3, 2), 'Helvetica-Bold'),
            ('FONTSIZE', (0, 1), (3, 2), 10),
            ('ALIGN', (0, 1), (3, 2), 'CENTER'),
            ('GRID', (0, 0), (3, 2), 1, colors.black),
            ('VALIGN', (0, 0), (3, 2), 'MIDDLE'),
        ]))
        
        story.append(header_table)
        story.append(Spacer(1, 20))
        
        # Datos del Candidato
        story.append(Paragraph("Datos del Candidato", subtitle_style))
        
        candidate_data = [
            ['Nombre:', '_' * 60],
            ['Puesto al que aplica:', '_' * 40],
            ['Fecha:', '___/___/______', 'Entrevistador:', '_' * 30]
        ]
        
        candidate_table = Table(candidate_data, colWidths=[1.5*inch, 2.5*inch, 1.5*inch, 2*inch])
        candidate_table.setStyle(TableStyle([
            ('FONTNAME', (0, 0), (-1, -1), 'Helvetica'),
            ('FONTSIZE', (0, 0), (-1, -1), 10),
            ('ALIGN', (0, 0), (0, -1), 'LEFT'),
            ('VALIGN', (0, 0), (-1, -1), 'MIDDLE'),
        ]))
        
        story.append(candidate_table)
        story.append(Spacer(1, 15))
        
        # Secciones del formulario
        sections = [
            {
                'title': '1. Presentaci√≥n General',
                'items': [
                    'Puntualidad: ‚òê S√≠ ‚òê No',
                    'Apariencia profesional: ‚òê Excelente ‚òê Buena ‚òê Regular ‚òê Deficiente',
                    'Actitud inicial: ‚òê Positiva ‚òê Neutral ‚òê Negativa',
                    'Observaciones: ' + '_' * 50
                ]
            },
            {
                'title': '2. Formaci√≥n Acad√©mica',
                'items': [
                    'Nivel de estudios alcanzado: ' + '_' * 30,
                    'Relevancia para el puesto: ‚òê Alta ‚òê Media ‚òê Baja',
                    'Comentarios: ' + '_' * 50
                ]
            },
            {
                'title': '3. Experiencia Laboral',
                'items': [
                    'Experiencia previa en puestos similares: ‚òê S√≠ ‚òê No',
                    'Tiempo de experiencia: ' + '_' * 30,
                    'Logros relevantes: ' + '_' * 35,
                    'Comentarios: ' + '_' * 50
                ]
            },
            {
                'title': '4. Habilidades y Competencias',
                'items': [
                    'Comunicaci√≥n: ‚òê Excelente ‚òê Buena ‚òê Regular ‚òê Deficiente',
                    'Trabajo en equipo: ‚òê Excelente ‚òê Buena ‚òê Regular ‚òê Deficiente',
                    'Resoluci√≥n de problemas: ‚òê Excelente ‚òê Buena ‚òê Regular ‚òê Deficiente',
                    'Liderazgo (si aplica): ‚òê Excelente ‚òê Buena ‚òê Regular ‚òê Deficiente',
                    'Comentarios: ' + '_' * 50
                ]
            },
            {
                'title': '5. Motivaci√≥n y Expectativas',
                'items': [
                    'Raz√≥n principal para postularse: ' + '_' * 25,
                    'Expectativa salarial: ' + '_' * 35,
                    'Disponibilidad de horario: ‚òê S√≠ ‚òê No',
                    'Inter√©s en crecer dentro de la empresa: ‚òê S√≠ ‚òê No',
                    'Comentarios: ' + '_' * 50
                ]
            },
            {
                'title': '6. Evaluaci√≥n Final del Entrevistador',
                'items': [
                    'Nivel de adecuaci√≥n al puesto:',
                    '‚òê Muy adecuado',
                    '‚òê Adecuado',
                    '‚òê Poco adecuado',
                    '‚òê No adecuado',
                    '',
                    'Recomendaci√≥n:',
                    '‚òê Continuar en proceso',
                    '‚òê Rechazar candidato',
                    '‚òê Mantener en base de datos',
                    '',
                    'Firma del entrevistador: ' + '_' * 35
                ]
            }
        ]
        
        # Agregar cada secci√≥n
        for section in sections:
            story.append(Paragraph(section['title'], subtitle_style))
            
            for item in section['items']:
                if item.strip():  # Solo agregar si no est√° vac√≠o
                    story.append(Paragraph(item, normal_style))
                else:
                    story.append(Spacer(1, 6))
            
            story.append(Spacer(1, 10))
        
        # Generar el PDF
        doc.build(story)
        
        self.stdout.write(self.style.SUCCESS(f'‚úÖ PDF generado exitosamente: {pdf_path}'))
        self.stdout.write(f'üìÅ Ubicaci√≥n: {pdf_path}')
        self.stdout.write(f'üìÑ Tama√±o: {os.path.getsize(pdf_path)} bytes')
        
        return pdf_path
