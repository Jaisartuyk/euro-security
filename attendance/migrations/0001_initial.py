# Generated by Django 5.2.6 on 2025-09-23 04:03

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_start_time', models.TimeField(default='08:00:00')),
                ('work_end_time', models.TimeField(default='17:00:00')),
                ('break_duration_minutes', models.PositiveIntegerField(default=60)),
                ('late_tolerance_minutes', models.PositiveIntegerField(default=15)),
                ('early_exit_tolerance_minutes', models.PositiveIntegerField(default=15)),
                ('location_tolerance_meters', models.PositiveIntegerField(default=100)),
                ('facial_confidence_threshold', models.FloatField(default=0.6)),
                ('max_recognition_attempts', models.PositiveIntegerField(default=3)),
                ('work_locations', models.TextField(default='[]', help_text='JSON con ubicaciones de trabajo permitidas')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Asistencia',
                'verbose_name_plural': 'Configuraciones de Asistencia',
            },
        ),
        migrations.CreateModel(
            name='FacialRecognitionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('face_encoding', models.TextField(help_text='Codificación facial serializada')),
                ('confidence_threshold', models.FloatField(default=0.6, help_text='Umbral de confianza para reconocimiento')),
                ('reference_images', models.TextField(blank=True, help_text='JSON con rutas de imágenes de referencia')),
                ('total_recognitions', models.PositiveIntegerField(default=0)),
                ('successful_recognitions', models.PositiveIntegerField(default=0)),
                ('last_recognition', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('needs_retraining', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='facial_profile', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Perfil de Reconocimiento Facial',
                'verbose_name_plural': 'Perfiles de Reconocimiento Facial',
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_type', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Salida'), ('BREAK_OUT', 'Salida a Descanso'), ('BREAK_IN', 'Regreso de Descanso')], max_length=10)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('verification_method', models.CharField(choices=[('FACIAL', 'Reconocimiento Facial'), ('MANUAL', 'Manual por Supervisor'), ('EMERGENCY', 'Emergencia')], default='FACIAL', max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('location_accuracy', models.FloatField(blank=True, help_text='Precisión en metros', null=True)),
                ('address', models.TextField(blank=True, help_text='Dirección obtenida por geocodificación inversa')),
                ('facial_confidence', models.FloatField(blank=True, help_text='Confianza del reconocimiento facial (0-1)', null=True)),
                ('facial_image_path', models.CharField(blank=True, help_text='Ruta de la imagen capturada', max_length=500)),
                ('device_info', models.TextField(blank=True, help_text='Información del dispositivo usado')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales')),
                ('is_valid', models.BooleanField(default=True, help_text='Si el registro es válido')),
                ('validation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employees.employee')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_attendances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Asistencia',
                'verbose_name_plural': 'Registros de Asistencia',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['employee', 'timestamp'], name='attendance__employe_d2a742_idx'), models.Index(fields=['attendance_type', 'timestamp'], name='attendance__attenda_5e5bc5_idx'), models.Index(fields=['timestamp'], name='attendance__timesta_01c0dc_idx')],
            },
        ),
        migrations.CreateModel(
            name='AttendanceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('first_entry', models.DateTimeField(blank=True, null=True)),
                ('last_exit', models.DateTimeField(blank=True, null=True)),
                ('total_work_hours', models.DurationField(blank=True, null=True)),
                ('total_break_time', models.DurationField(blank=True, null=True)),
                ('entries_count', models.PositiveIntegerField(default=0)),
                ('exits_count', models.PositiveIntegerField(default=0)),
                ('break_count', models.PositiveIntegerField(default=0)),
                ('is_present', models.BooleanField(default=False)),
                ('is_late', models.BooleanField(default=False)),
                ('is_early_exit', models.BooleanField(default=False)),
                ('locations_visited', models.TextField(blank=True, help_text='JSON con ubicaciones visitadas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_summaries', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Resumen de Asistencia',
                'verbose_name_plural': 'Resúmenes de Asistencia',
                'ordering': ['-date', 'employee__last_name'],
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
