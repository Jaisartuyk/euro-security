# Generated by Django 5.2.6 on 2025-09-27 16:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('attendance', '0007_add_shift_models'),
        ('employees', '0002_alter_employee_address_alter_employee_city_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('documents_uploaded', models.IntegerField(default=0)),
                ('documents_processed', models.IntegerField(default=0)),
                ('documents_approved', models.IntegerField(default=0)),
                ('documents_rejected', models.IntegerField(default=0)),
                ('documents_pending_review', models.IntegerField(default=0)),
                ('ai_accuracy_rate', models.FloatField(default=0.0)),
                ('ai_processing_time_avg', models.FloatField(default=0.0)),
                ('human_intervention_rate', models.FloatField(default=0.0)),
                ('leaves_created', models.IntegerField(default=0)),
                ('leaves_active', models.IntegerField(default=0)),
                ('total_days_granted', models.IntegerField(default=0)),
                ('claude_conversations', models.IntegerField(default=0)),
                ('avg_conversation_rating', models.FloatField(default=0.0)),
                ('analytics_data', models.JSONField(default=dict, help_text='Datos adicionales de analytics')),
            ],
            options={
                'db_table': 'attendance_medical_analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.AlterModelOptions(
            name='employeeshiftassignment',
            options={},
        ),
        migrations.AlterModelTable(
            name='employeeshiftassignment',
            table='attendance_employeeshiftassignment',
        ),
        migrations.CreateModel(
            name='DrClaudeConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='ID único de la sesión de chat', max_length=100)),
                ('user_message', models.TextField()),
                ('claude_response', models.TextField()),
                ('conversation_context', models.JSONField(default=dict, help_text='Contexto de la conversación para Dr. Claude')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_time_ms', models.IntegerField(default=0)),
                ('message_type', models.CharField(blank=True, choices=[('medical_query', 'Consulta Médica'), ('document_upload', 'Subida de Documento'), ('policy_question', 'Pregunta de Política'), ('general_help', 'Ayuda General'), ('complaint', 'Queja o Reclamo')], max_length=50)),
                ('user_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Calificación del usuario (1-5 estrellas)', null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claude_conversations', to='employees.employee')),
            ],
            options={
                'db_table': 'attendance_claude_conversation',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MedicalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('certificate', 'Certificado Médico'), ('prescription', 'Receta Médica'), ('lab_result', 'Resultado de Laboratorio'), ('medical_report', 'Informe Médico'), ('disability_cert', 'Certificado de Discapacidad'), ('vaccination', 'Certificado de Vacunación')], default='certificate', max_length=20)),
                ('document_file', models.FileField(help_text='Certificado médico, receta, etc.', upload_to='medical_documents/%Y/%m/')),
                ('ai_extracted_data', models.JSONField(default=dict, help_text='Datos extraídos automáticamente por Dr. Claude')),
                ('ai_analysis', models.TextField(blank=True, help_text='Análisis completo realizado por Dr. Claude')),
                ('ai_confidence_score', models.FloatField(default=0.0, help_text='Nivel de confianza de la IA (0.0 - 1.0)')),
                ('is_valid_document', models.BooleanField(default=False)),
                ('validation_notes', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by_ai', models.BooleanField(default=False)),
                ('patient_name', models.CharField(blank=True, max_length=200)),
                ('diagnosis', models.TextField(blank=True)),
                ('doctor_name', models.CharField(blank=True, max_length=200)),
                ('medical_center', models.CharField(blank=True, max_length=200)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_documents', to='employees.employee')),
            ],
            options={
                'db_table': 'attendance_medical_document',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('ai_approved', 'Aprobado por IA'), ('ai_rejected', 'Rechazado por IA'), ('human_review', 'Revisión Humana'), ('hr_approved', 'Aprobado por RRHH'), ('hr_rejected', 'Rechazado por RRHH'), ('active', 'Activo'), ('completed', 'Completado'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('ai_recommendation', models.CharField(blank=True, choices=[('approve', 'Aprobar'), ('reject', 'Rechazar'), ('review', 'Requiere Revisión Humana')], max_length=20)),
                ('ai_reasoning', models.TextField(blank=True, help_text='Razonamiento de Dr. Claude para la decisión')),
                ('diagnosis_summary', models.TextField(blank=True)),
                ('medical_notes', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('hr_notes', models.TextField(blank=True)),
                ('shifts_affected', models.JSONField(default=list, help_text='IDs de turnos afectados por este permiso')),
                ('automatic_reassignment', models.BooleanField(default=False, help_text='Si se reasignaron turnos automáticamente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_leaves', to='employees.employee')),
                ('medical_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to='attendance.medicaldocument')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_medical_leaves', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'attendance_medical_leave',
                'ordering': ['-created_at'],
            },
        ),
    ]
